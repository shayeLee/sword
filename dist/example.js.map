{"version":3,"file":"example.js","sources":["../src/arrTool.js","../src/dateTool.js","../src/domTool.js","../src/fileTool.js","../src/variables.js","../src/objTool.js","../src/strTool.js","../src/animate.js","../src/functional.js","../example/getCurrWeekDates.js"],"sourcesContent":["/**\r\n * @namespace arrTool\r\n */\r\n\r\n/**\r\n * 枚举flags数组所有元素之和反向求解\r\n * @memberof arrTool\r\n * @function enumFlagsThrustReverser\r\n * @param {number} sum - 枚举flags数组所有元素之和\r\n * @returns {array} enumFlags - 枚举flags数组\r\n */\r\nfunction enumFlagsThrustReverser(sum) {\r\n  if (sum === 1) return [1];\r\n\r\n  var code = 1;\r\n  var subjectCodeArr = [];\r\n  while (code <= sum) {\r\n    if ((code & sum) === code) {\r\n      subjectCodeArr.push(code);\r\n    }\r\n    code *= 2;\r\n  }\r\n\r\n  return subjectCodeArr;\r\n};\r\nexport { enumFlagsThrustReverser }\r\n","/**\r\n * @namespace dateTool\r\n */\r\n\r\n/**\r\n * 将时间对象转换为时间字符串\r\n * @memberOf dateTool\r\n * @function time2str\r\n * @param {date} date - 时间对象\r\n * @param {string} type - 时间字符串类型\r\n * e.g. \"date-time\" => 2016-5-31 10:25:10\r\n * e.g. \"date\" => 2016-5-31\r\n * e.g. \"month-day\" => 5-31\r\n * e.g. \"time\" => 10:30\r\n * e.g. \"china-date\" => 2016年5月31日\r\n * e.g. \"week\" => 周一（5月31日）\r\n * @returns {string} 时间字符串\r\n */\r\nfunction time2str(date, type) {\r\n  const _date = date;\r\n  if (typeof _date === \"number\") date = new Date(_date);\r\n\r\n  var weekdayMap = {\r\n    1: \"周一\",\r\n    2: \"周二\",\r\n    3: \"周三\",\r\n    4: \"周四\",\r\n    5: \"周五\",\r\n    6: \"周六\",\r\n    0: \"周天\"\r\n  };\r\n\r\n  var weekday = weekdayMap[date.getDay()];\r\n  var day = date.getDate().toString();\r\n  if (day.length === 1) day = \"0\" + day;\r\n  var mou = (date.getMonth() + 1).toString();\r\n  if (mou.length === 1) mou = \"0\" + mou;\r\n  var yea = date.getFullYear().toString();\r\n  var hou = date.getHours().toString();\r\n  if (hou.length === 1) hou = \"0\" + hou;\r\n  var min = date.getMinutes().toString();\r\n  if (min.length === 1) min = \"0\" + min;\r\n  var sen = date.getSeconds().toString();\r\n  if (sen.length === 1) sen = \"0\" + sen;\r\n\r\n  if (type === \"date-time\") {\r\n    return yea + \"-\" + mou + \"-\" + day + \" \" + hou + \":\" + min + \":\" + sen;\r\n  } else if (type === \"date\") {\r\n    return yea + \"-\" + mou + \"-\" + day;\r\n  } else if (type === \"month-day\") {\r\n    return mou + \"-\" + day;\r\n  } else if (type === \"time\") {\r\n    return hou + \":\" + min;\r\n  } else if (type === \"china-date\") {\r\n    return yea + \"年\" + mou + \"月\" + day + \"日\";\r\n  } else if (type === \"week\") {\r\n    return weekday + \"(\" + mou + \"月\" + day + \"日)\";\r\n  }\r\n}\r\n\r\n/**\r\n * 将时间字符串转换为时间对象\r\n * @memberOf dateTool\r\n * @function str2time\r\n * @param {string} strTime - 时间字符串\r\n * e.g. \"2017-02-13 10:02:58\"\r\n * e.g. \"2017-02-13\"\r\n * e.g. \"9:10\"\r\n */\r\nfunction str2time(strTime) {\r\n  // new Date(year, month[, day[, hour[, minutes[, seconds[, milliseconds]]]]]);\r\n  strTime = strTime.trim();\r\n  var _type;\r\n  if (strTime.indexOf(\"-\") > -1 && strTime.indexOf(\":\") > -1) {\r\n    _type = \"dateTime\";\r\n  } else if (strTime.indexOf(\"-\") > -1 && strTime.indexOf(\":\") < 0) {\r\n    _type = \"date\";\r\n  } else if (strTime.indexOf(\"-\") < 0 && strTime.indexOf(\":\") > -1) {\r\n    _type = \"time\";\r\n  }\r\n\r\n  var arr;\r\n  var date;\r\n  var time;\r\n  var dateArr;\r\n  var year;\r\n  var month;\r\n  var day;\r\n  var timeArr;\r\n  var hour;\r\n  var minutes;\r\n  var seconds;\r\n\r\n  if (_type === \"dateTime\") {\r\n    arr = strTime.split(\" \");\r\n\r\n    date = arr[0];\r\n    dateArr = date.split(\"-\");\r\n    year = dateArr[0];\r\n    month = dateArr[1];\r\n    day = dateArr[2];\r\n\r\n    time = arr[1];\r\n    timeArr = time.split(\":\");\r\n    hour = timeArr[0];\r\n    minutes = timeArr[1];\r\n    seconds = timeArr.length > 2 ? timeArr[2] : 0;\r\n\r\n    return new Date(year, month - 1, day, hour, minutes, seconds);\r\n  } else if (_type === \"date\") {\r\n    date = strTime;\r\n    dateArr = date.split(\"-\");\r\n    year = dateArr[0];\r\n    month = dateArr[1];\r\n    day = dateArr[2];\r\n\r\n    return new Date(year, month - 1, day);\r\n  } else if (_type === \"time\") {\r\n    date = new Date();\r\n    year = date.getFullYear();\r\n    month = date.getMonth();\r\n    day = date.getDate();\r\n\r\n    time = strTime;\r\n    timeArr = time.split(\":\");\r\n    hour = timeArr[0];\r\n    minutes = timeArr[1];\r\n    seconds = timeArr.length > 2 ? timeArr[2] : 0;\r\n\r\n    return new Date(year, month - 1, day, hour, minutes, seconds);\r\n  }\r\n}\r\n\r\n/**\r\n * 获取当前周的每天的日期（共七天）\r\n * @memberof dateTool\r\n*/\r\nfunction getCurrWeekDates() {\r\n  const timeOfToday = Date.now();\r\n  const weekOfToday = (new Date().getDay() + 7 - 1) % 7;\r\n  return Array.from(new Array(7)).map((_, i) => {\r\n    const date = new Date(timeOfToday + (i - weekOfToday) * 1000 * 60 * 60 * 24);\r\n    return (\r\n      date.getFullYear() +\r\n      \"-\" +\r\n      String(date.getMonth() + 1).padStart(2, \"0\") +\r\n      \"-\" +\r\n      String(date.getDate()).padStart(2, \"0\")\r\n    );\r\n  });\r\n}\r\n\r\nexport { time2str, str2time, getCurrWeekDates };\r\n","/**\r\n * @namespace domTool\r\n */\r\n\r\n/**\r\n * 获取dom元素距离指定定位父元素顶部的高度\r\n * @memberof domTool\r\n * @function getElementTop\r\n * @param {element} element - 目标元素\r\n * @param {element} [target=document.documentElement] - 指定定位父元素，默认为document.documentElement\r\n * @returns {number} elementTop\r\n */\r\nfunction getElementTop(element, target) {\r\n  let actualTop = element.offsetTop;\r\n  let current = element.offsetParent;\r\n  const _target = target ? target : document.documentElement;\r\n\r\n  while (!(current === null || current === _target)) {\r\n    actualTop += current.offsetTop;\r\n    current = current.offsetParent;\r\n  }\r\n\r\n  return actualTop;\r\n}\r\n\r\n/**\r\n * 获取dom元素距离指定定位父元素左边的宽度\r\n * @memberof domTool\r\n * @function getElementLeft\r\n * @param {element} element - 目标元素\r\n * @param {element} [target=document.documentElement] - 指定定位父元素，默认为document.documentElement\r\n * @returns {number} elementLeft\r\n */\r\nfunction getElementLeft(element, target) {\r\n  let actualLeft = element.offsetLeft;\r\n  let current = element.offsetParent;\r\n  const _target = target ? target : document.documentElement;\r\n\r\n  while (!(current === null || current === _target)) {\r\n    actualLeft += current.offsetLeft;\r\n    current = current.offsetParent;\r\n  }\r\n\r\n  return actualLeft;\r\n}\r\n\r\nexport { getElementTop, getElementLeft }\r\n","/**\r\n * @namespace fileTool\r\n */\r\n\r\n/**\r\n * 获取图片的base64字符串\r\n * @memberof fileTool\r\n * @param {image} img\r\n * @returns {promise}\r\n */\r\nfunction getImgBase64(img) {\r\n  return new Promise(resolve => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      resolve(reader.result);\r\n    });\r\n    reader.readAsDataURL(img);\r\n  });\r\n}\r\nexport { getImgBase64 }\r\n","/**\r\n * @namespace variables\r\n */\r\n\r\n/**\r\n * 判断变量是否是object\r\n * @memberOf variables\r\n * @function isObject\r\n * @param {*} obj\r\n */\r\nfunction isObject(obj) {\r\n  return Object.prototype.toString.call(obj) === \"[object Object]\";\r\n}\r\n\r\n/**\r\n * 判断object是否是空的\r\n * @memberOf variables\r\n * @function isEmptyObject\r\n * @param {object} obj\r\n */\r\nfunction isEmptyObject(obj) {\r\n  for (var key in obj) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * 判断函数是否是Promise对象\r\n * @memberOf variables\r\n * @param {function} fn - 被判断的函数\r\n */\r\nfunction isPromise(fn) {\r\n  return isCorrect(fn) && typeof fn.then === \"function\";\r\n}\r\n\r\n/**\r\n * 检验变量是否有正确的值\r\n * @memberOf variables\r\n * @function isCorrect\r\n * @param {*} variable - 被检验的变量\r\n * @param {boolean} [notBezero=false] - 是否不允许变量等于零\r\n */\r\nfunction isCorrect(variable, notBezero) {\r\n  var result = true;\r\n  if (\r\n    typeof variable === \"string\" &&\r\n    (variable === \"\" ||\r\n      variable === \"undefined\" ||\r\n      variable === \"null\" ||\r\n      variable === \"NaN\" ||\r\n      variable === \"Infinity\")\r\n  ) {\r\n    result = false;\r\n  } else if (\r\n    typeof variable === \"number\" &&\r\n    (isNaN(variable) || !isFinite(variable) || (notBezero && variable === 0))\r\n  ) {\r\n    result = false;\r\n  } else if (variable === null) {\r\n    result = false;\r\n  } else if (typeof variable === \"undefined\") {\r\n    result = false;\r\n  } else if (isObject(variable)) {\r\n    if (isEmptyObject(variable)) {\r\n      result = false;\r\n    }\r\n  } else if (Array.isArray(variable)) {\r\n    if (variable.length === 0) {\r\n      result = false;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * array object 深拷贝\r\n * @memberOf variables\r\n * @function cloneDeep\r\n * @param {object|array} target - 被拷贝的对象\r\n */\r\nfunction cloneDeep(target) {\r\n  var _isObject = isObject(target);\r\n  var _isArray = Array.isArray(target);\r\n\r\n  if (_isObject || _isArray) {\r\n    var newObj = {};\r\n    for (var key in target) {\r\n      newObj[key] = cloneDeep(target[key]);\r\n    }\r\n    return newObj;\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nexport { isObject, isEmptyObject, isPromise, isCorrect, cloneDeep }\r\n","/**\r\n * @namespace objTool\r\n */\r\n\r\nimport { isCorrect } from \"./variables\";\r\n\r\n/**\r\n * 将object转换为URL查询参数\r\n * @memberOf objTool\r\n * @function obj2query\r\n * @param {object} obj - 要转换为查询参数的object\r\n * @returns {string} - URL查询参数\r\n */\r\nfunction obj2query(obj) {\r\n  if (!isCorrect(obj)) return \"\";\r\n\r\n  let query = \"\";\r\n  for (const key in obj) {\r\n    if (query === \"\") {\r\n      query += `${key}=${obj[key]}`;\r\n    } else {\r\n      query += `&${key}=${obj[key]}`;\r\n    }\r\n  }\r\n\r\n  return `?${query}`;\r\n}\r\nexport { obj2query }","/**\r\n * @namespace strTool\r\n */\r\n\r\nimport { isCorrect } from \"./variables\";\r\n\r\n/**\r\n * 把URL查询参数转换为object\r\n * @memberOf strTool\r\n * @function query2obj\r\n * @param {string} query - url问号后面的查询参数  e.g. ?id=66597&type=2&stuNum=1\r\n * @returns {object}\r\n */\r\nfunction query2obj(query) {\r\n  if (!isCorrect(query)) return {};\r\n\r\n  const queryItems = query.slice(1).split(\"&\");\r\n  const queryMap = {};\r\n  queryItems.forEach(item => {\r\n    if (!isCorrect(item)) return;\r\n\r\n    const itemArr = item.split(\"=\"),\r\n      key = itemArr[0],\r\n      value = itemArr[1];\r\n    queryMap[key] = value;\r\n  });\r\n\r\n  return queryMap;\r\n}\r\n\r\nfunction lowercase2capitalize(string) {\r\n  return string.slice(0, 1).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport { query2obj, lowercase2capitalize }\r\n","/**\r\n * @namespace animate\r\n */\r\n\r\n/**\r\n * js动画引擎\r\n * @memberof animate\r\n * @param {function} cb - 逐帧回调函数\r\n*/\r\nfunction rAF(cb) {\r\n  var rAF =\r\n    window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    function(cb) {\r\n      window.setTimeout(cb, 1000 / 60);\r\n    };\r\n  return rAF(cb);\r\n}\r\n\r\nexport { rAF }\r\n","/**\r\n * @namespace functional\r\n */\r\n\r\n/**\r\n * 函数防抖\r\n * @memberof functional\r\n * @param {function} func\r\n * @param {number} delay\r\n * @returns {function}\r\n */\r\nfunction debounce(func, delay) {\r\n    let timeout;\r\n    return function(e) {\r\n        clearTimeout(timeout);\r\n        let context = this,\r\n            args = arguments;\r\n        timeout = setTimeout(function() {\r\n            func.apply(context, args);\r\n        }, delay);\r\n    };\r\n}\r\n\r\n/**\r\n * 函数节流\r\n * @memberof functional\r\n * @param {function} func\r\n * @param {number} threshold\r\n * @returns {function}\r\n */\r\nfunction throttle(func, threshold) {\r\n    let timeout;\r\n    let start = new Date();\r\n    let _threshold = threshold || 160;\r\n    return function() {\r\n        let context = this,\r\n            args = arguments,\r\n            curr = new Date() - 0;\r\n\r\n        clearTimeout(timeout);\r\n        if (curr - start >= _threshold) {\r\n            func.apply(context, args);\r\n            start = curr;\r\n        } else {\r\n            //让方法在脱离事件后也能执行一次\r\n            timeout = setTimeout(function() {\r\n                func.apply(context, args);\r\n            }, _threshold);\r\n        }\r\n    };\r\n}\r\n\r\nexport { debounce, throttle }","import { getCurrWeekDates } from \"../src/index\";\r\n\r\nconsole.log(getCurrWeekDates());"],"names":["getCurrWeekDates","timeOfToday","Date","now","weekOfToday","getDay","Array","from","map","_","i","date","getFullYear","String","getMonth","padStart","getDate","console","log"],"mappings":";;;EAAA;;;;ECAA;;;EAqIA;;;;;;EAIA,SAASA,gBAAT,GAA4B;EAC1B,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAL,EAApB;EACA,MAAMC,WAAW,GAAG,CAAC,IAAIF,IAAJ,GAAWG,MAAX,KAAsB,CAAtB,GAA0B,CAA3B,IAAgC,CAApD;EACA,SAAOC,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAU,CAAV,CAAX,EAAyBE,GAAzB,CAA6B,UAACC,CAAD,EAAIC,CAAJ,EAAU;EAC5C,QAAMC,IAAI,GAAG,IAAIT,IAAJ,CAASD,WAAW,GAAG,CAACS,CAAC,GAAGN,WAAL,IAAoB,IAApB,GAA2B,EAA3B,GAAgC,EAAhC,GAAqC,EAA5D,CAAb;EACA,WACEO,IAAI,CAACC,WAAL,KACA,GADA,GAEAC,MAAM,CAACF,IAAI,CAACG,QAAL,KAAkB,CAAnB,CAAN,CAA4BC,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CAFA,GAGA,GAHA,GAIAF,MAAM,CAACF,IAAI,CAACK,OAAL,EAAD,CAAN,CAAuBD,QAAvB,CAAgC,CAAhC,EAAmC,GAAnC,CALF;EAOD,GATM,CAAP;EAUD;;ECtJD;;;;ECAA;;;;ECAA;;;;ECAA;;;;ECAA;;;;ECAA;;;;ECAA;;;;ECEAE,OAAO,CAACC,GAAR,CAAYlB,gBAAgB,EAA5B;;;;"}